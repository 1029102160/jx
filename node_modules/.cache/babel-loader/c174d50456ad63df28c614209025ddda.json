{"remainingRequest":"C:\\Users\\金龙\\WebstormProjects\\jx\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\金龙\\WebstormProjects\\jx\\node_modules\\babel-loader\\lib\\index.js??ref--30-2!C:\\Users\\金龙\\WebstormProjects\\jx\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\金龙\\WebstormProjects\\jx\\src\\axiosInterceptors.js","dependencies":[{"path":"C:\\Users\\金龙\\WebstormProjects\\jx\\src\\axiosInterceptors.js","mtime":1557582031316},{"path":"C:\\Users\\金龙\\WebstormProjects\\jx\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557153102075},{"path":"C:\\Users\\金龙\\WebstormProjects\\jx\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1557153102750},{"path":"C:\\Users\\金龙\\WebstormProjects\\jx\\node_modules\\babel-loader\\lib\\index.js","mtime":1557153093181},{"path":"C:\\Users\\金龙\\WebstormProjects\\jx\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1557153100776}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport axios from \"axios\";\nimport store from \"./store\";\nimport router from \"./router\";\nexport default function axiosInterceptors() {\n  // 添加请求拦截器\n  axios.interceptors.request.use(function (config) {\n    if (store.state.token) {\n      config.headers.Authorization = store.state.token;\n    }\n\n    return config;\n  }, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n  }); // 添加响应拦截器\n\n  axios.interceptors.response.use(function (response) {\n    if (response.data.code === 999) {\n      //清除token值\n      store.dispatch({\n        type: \"setTokenAction\",\n        token: \"\"\n      });\n      router.replace(\"/\");\n      console.log(\"token过期\");\n    }\n\n    return response;\n  }, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n  });\n}",{"version":3,"sources":["C:\\Users\\金龙\\WebstormProjects\\jx\\src\\axiosInterceptors.js"],"names":["axios","store","router","axiosInterceptors","interceptors","request","use","config","state","token","headers","Authorization","error","Promise","reject","response","data","code","dispatch","type","replace","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAC1C;AACAH,EAAAA,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAASC,MAAT,EAAiB;AACf,QAAIN,KAAK,CAACO,KAAN,CAAYC,KAAhB,EAAuB;AACrBF,MAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA+BV,KAAK,CAACO,KAAN,CAAYC,KAA3C;AACD;;AACD,WAAOF,MAAP;AACD,GANH,EAOE,UAASK,KAAT,EAAgB;AACd;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAVH,EAF0C,CAe1C;;AACAZ,EAAAA,KAAK,CAACI,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CACE,UAASS,QAAT,EAAmB;AACjB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,IAAd,KAAuB,GAA3B,EAAgC;AAC9B;AACAhB,MAAAA,KAAK,CAACiB,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,gBADO;AAEbV,QAAAA,KAAK,EAAE;AAFM,OAAf;AAIAP,MAAAA,MAAM,CAACkB,OAAP,CAAe,GAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACD,WAAOP,QAAP;AACD,GAZH,EAaE,UAASH,KAAT,EAAgB;AACd;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAhBH;AAkBD","sourcesContent":["import axios from \"axios\";\r\nimport store from \"./store\";\r\nimport router from \"./router\";\r\n\r\nexport default function axiosInterceptors() {\r\n  // 添加请求拦截器\r\n  axios.interceptors.request.use(\r\n    function(config) {\r\n      if (store.state.token) {\r\n        config.headers.Authorization = store.state.token;\r\n      }\r\n      return config;\r\n    },\r\n    function(error) {\r\n      // 对请求错误做些什么\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  // 添加响应拦截器\r\n  axios.interceptors.response.use(\r\n    function(response) {\r\n      if (response.data.code === 999) {\r\n        //清除token值\r\n        store.dispatch({\r\n          type: \"setTokenAction\",\r\n          token: \"\"\r\n        });\r\n        router.replace(\"/\");\r\n        console.log(\"token过期\");\r\n      }\r\n      return response;\r\n    },\r\n    function(error) {\r\n      // 对响应错误做点什么\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n"]}]}